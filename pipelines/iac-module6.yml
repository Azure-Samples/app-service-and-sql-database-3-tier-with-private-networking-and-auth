trigger:
  branches:
    include:
    - main
  paths:
    include:
    - bicep/modules
    - bicep/module5.bicep
    - pipelines/iac-module6.yml
    - pipelines/templates
    - scripts

name: IaC Module 6

variables:
  - name: prefix
    value: dotnet-vbd-m5-$(uniqueId) #CHANGE ME or delete me and get from dotnet-vbd library!
  - name: resourceGroupNamePrefix
    value: dotnet-vbd-module6 #CHANGE ME or delete me and get from dotnet-vbd library
  - name: serviceConnectionName
    value: dotnet-vbd-sc #CHANGE ME or delete me and get from dotnet-vbd library
  - name: agentPoolName
    value: dotnet-vbd #CHANGE ME or delete me and get from dotnet-vbd library
  - group: dotnet-vbd
  # You must create a Library variable group called dotnet-vbd and put the following variables in it for this pipeline to succeed.
  # You must declare a variable for uniqueId. This is used to ensure there are no collisions for global services, whilst still being deterministic
  # You must declare variables for sqlAdminObjectId, which needs to the Service Principal Object Id used for the Service Connection here. 
  # You must declare variables for webAppUserEmail, which needs to the email address of the user in Azure AD who will be able to access the web app.

stages:
  - stage: deploy_to_dev
    displayName: Deploy to Dev
    jobs:
      - deployment: deploy_infrastructure
        displayName: Deploy Infrastructure to Dev
        environment: dev
        pool:
          vmImage: ubuntu-latest
        strategy:
          runOnce:
            deploy:
              steps:
              - template: templates/deploy-iac-template.yaml
                parameters:
                  serviceConnectionName: $(serviceConnectionName)
                  prefix: "$(prefix)-dev"
                  webAppUserEmail: $(webAppUserEmail)
                  resourceGroupName: "$(resourceGroupNamePrefix)-dev"
                  location: $(location)
                  agentPoolName: $(agentPoolName)
                  sqlAdminObjectId: $(sqlAdminObjectId)

  - stage: deploy_to_test
    displayName: Deploy to Test
    dependsOn: deploy_to_dev
    jobs:
      - deployment: deploy_infrastructure
        displayName: Deploy Infrastructure to Test
        environment: test
        pool:
          vmImage: ubuntu-latest
        strategy:
          runOnce:
            deploy:
              steps:
              - template: templates/deploy-iac-template.yaml
                parameters:
                  serviceConnectionName: $(serviceConnectionName)
                  prefix: "$(prefix)-test"
                  webAppUserEmail: $(webAppUserEmail)
                  resourceGroupName: "$(resourceGroupNamePrefix)-test"
                  location: $(location)
                  agentPoolName: $(agentPoolName)
                  sqlAdminObjectId: $(sqlAdminObjectId)
                  
  - stage: deploy_to_prod
    displayName: Deploy to Prod
    dependsOn: deploy_to_test
    jobs:
      - deployment: deploy_infrastructure
        displayName: Deploy Infrastructure to Prod
        environment: prod
        pool:
          vmImage: ubuntu-latest
        strategy:
          runOnce:
            deploy:
              steps:
              - template: templates/deploy-iac-template.yaml
                parameters:
                  serviceConnectionName: $(serviceConnectionName)
                  prefix: "$(prefix)-prod"
                  webAppUserEmail: $(webAppUserEmail)
                  resourceGroupName: "$(resourceGroupNamePrefix)-prod"
                  location: $(location)
                  agentPoolName: $(agentPoolName)
                  sqlAdminObjectId: $(sqlAdminObjectId)
